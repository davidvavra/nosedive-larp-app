//
// Nearby users
//

path /nearbyUsers {
    read() { true }
    path /{user_id} {
      index() {["delegate", "isVisible", "totalRating"]}
    }
}

//
// User secrets
//

path /userSecrets {
    path /{user_id} is Secret {
      index() {["password"]}
      read() { isCurrentUser(user_id) }
      write() { isCurrentUser(user_id) }
    }
}

type Secret {
  password: Password,
  notificationsToken: Token
}

type Password extends String {
    validate() { hasMaxLength(this, 100) }
}

type Token extends String {
    validate() { hasMaxLength(this, 255) }
}

// 
// Ratings
//

path /ratings {

  path /{rating_id} is Rating {
    index() {["from", "to"]}
    
    read() { query.orderByChild == "to" && query.equalTo == auth.uid || query.orderByChild == "from" && query.equalTo == auth.uid }

    write() { isInsert(this) && this.from == auth.uid }
  }
}

type Rating {
  from: Id,
  to: Id,
  createdAt: Number,
  stars: Number
}

// 
// Reports
//

path /reports {
  path /{report_id} {
    read() { true }
    write() { true }
  }
}

//
// Common
//

type Id extends String {
    validate() { hasMaxLength(this, 50) }
}

hasMaxLength(text, length) {
    text.length <= length
}

isSignedIn() {
    auth != null
}

isCurrentUser(user_id) {
    isSignedIn() && auth.uid == user_id
}

isInsert(value) {
    prior(value) == null && value != null
}